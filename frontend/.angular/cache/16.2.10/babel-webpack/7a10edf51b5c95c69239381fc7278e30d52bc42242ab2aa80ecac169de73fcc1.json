{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/LabSeqService\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction LabSeqComponent_p_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"LabSeq Value: \", ctx_r0.labSeqValue, \"\");\n  }\n}\nexport class LabSeqComponent {\n  constructor(labSeqService) {\n    this.labSeqService = labSeqService;\n    this.sequenceNumber = 0;\n    this.labSeqValue = 0;\n  }\n  getLabSeqValue() {\n    this.labSeqService.getLabSeqValue(this.sequenceNumber).subscribe(value => this.labSeqValue = value);\n  }\n  static #_ = this.ɵfac = function LabSeqComponent_Factory(t) {\n    return new (t || LabSeqComponent)(i0.ɵɵdirectiveInject(i1.LabSeqService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LabSeqComponent,\n    selectors: [[\"app-labseq\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[\"for\", \"sequenceNumber\"], [\"type\", \"number\", \"id\", \"sequenceNumber\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngIf\"]],\n    template: function LabSeqComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"label\", 0);\n        i0.ɵɵtext(2, \"Enter a sequence number:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"input\", 1);\n        i0.ɵɵlistener(\"ngModelChange\", function LabSeqComponent_Template_input_ngModelChange_3_listener($event) {\n          return ctx.sequenceNumber = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵlistener(\"click\", function LabSeqComponent_Template_button_click_4_listener() {\n          return ctx.getLabSeqValue();\n        });\n        i0.ɵɵtext(5, \"Get LabSeq Value\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(6, LabSeqComponent_p_6_Template, 2, 1, \"p\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.sequenceNumber);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.labSeqValue !== undefined);\n      }\n    },\n    dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","labSeqValue","LabSeqComponent","constructor","labSeqService","sequenceNumber","getLabSeqValue","subscribe","value","_","ɵɵdirectiveInject","i1","LabSeqService","_2","selectors","decls","vars","consts","template","LabSeqComponent_Template","rf","ctx","ɵɵlistener","LabSeqComponent_Template_input_ngModelChange_3_listener","$event","LabSeqComponent_Template_button_click_4_listener","ɵɵtemplate","LabSeqComponent_p_6_Template","ɵɵproperty","undefined"],"sources":["C:\\Users\\danie\\Desktop\\quarkus-rest-service\\frontend\\src\\app\\components\\LabSeqComponent.ts","C:\\Users\\danie\\Desktop\\quarkus-rest-service\\frontend\\src\\app\\components\\LabSeqComponent.html"],"sourcesContent":["// labseq.component.ts\r\nimport { Component } from '@angular/core';\r\nimport { LabSeqService } from '../services/LabSeqService';\r\n\r\n@Component({\r\n  selector: 'app-labseq',\r\n  templateUrl: './LabSeqComponent.html', // Reference to the separate HTML file\r\n})\r\nexport class LabSeqComponent {\r\n  sequenceNumber: number = 0;\r\n  labSeqValue: number = 0;\r\n\r\n  constructor(private labSeqService: LabSeqService) {}\r\n\r\n  getLabSeqValue(): void {\r\n    this.labSeqService\r\n      .getLabSeqValue(this.sequenceNumber)\r\n      .subscribe((value) => (this.labSeqValue = value));\r\n  }\r\n}\r\n","<div>\r\n  <label for=\"sequenceNumber\">Enter a sequence number:</label>\r\n  <input type=\"number\" id=\"sequenceNumber\" [(ngModel)]=\"sequenceNumber\" />\r\n  <button (click)=\"getLabSeqValue()\">Get LabSeq Value</button>\r\n  <p *ngIf=\"labSeqValue !== undefined\">LabSeq Value: {{ labSeqValue }}</p>\r\n</div>\r\n"],"mappings":";;;;;;ICIEA,EAAA,CAAAC,cAAA,QAAqC;IAAAD,EAAA,CAAAE,MAAA,GAA+B;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAAnCH,EAAA,CAAAI,SAAA,GAA+B;IAA/BJ,EAAA,CAAAK,kBAAA,mBAAAC,MAAA,CAAAC,WAAA,KAA+B;;;ADItE,OAAM,MAAOC,eAAe;EAI1BC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAHjC,KAAAC,cAAc,GAAW,CAAC;IAC1B,KAAAJ,WAAW,GAAW,CAAC;EAE4B;EAEnDK,cAAcA,CAAA;IACZ,IAAI,CAACF,aAAa,CACfE,cAAc,CAAC,IAAI,CAACD,cAAc,CAAC,CACnCE,SAAS,CAAEC,KAAK,IAAM,IAAI,CAACP,WAAW,GAAGO,KAAM,CAAC;EACrD;EAAC,QAAAC,CAAA,G;qBAVUP,eAAe,EAAAR,EAAA,CAAAgB,iBAAA,CAAAC,EAAA,CAAAC,aAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAfX,eAAe;IAAAY,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCR5B1B,EAAA,CAAAC,cAAA,UAAK;QACyBD,EAAA,CAAAE,MAAA,+BAAwB;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC5DH,EAAA,CAAAC,cAAA,eAAwE;QAA/BD,EAAA,CAAA4B,UAAA,2BAAAC,wDAAAC,MAAA;UAAA,OAAAH,GAAA,CAAAhB,cAAA,GAAAmB,MAAA;QAAA,EAA4B;QAArE9B,EAAA,CAAAG,YAAA,EAAwE;QACxEH,EAAA,CAAAC,cAAA,gBAAmC;QAA3BD,EAAA,CAAA4B,UAAA,mBAAAG,iDAAA;UAAA,OAASJ,GAAA,CAAAf,cAAA,EAAgB;QAAA,EAAC;QAACZ,EAAA,CAAAE,MAAA,uBAAgB;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAC5DH,EAAA,CAAAgC,UAAA,IAAAC,4BAAA,eAAwE;QAC1EjC,EAAA,CAAAG,YAAA,EAAM;;;QAHqCH,EAAA,CAAAI,SAAA,GAA4B;QAA5BJ,EAAA,CAAAkC,UAAA,YAAAP,GAAA,CAAAhB,cAAA,CAA4B;QAEjEX,EAAA,CAAAI,SAAA,GAA+B;QAA/BJ,EAAA,CAAAkC,UAAA,SAAAP,GAAA,CAAApB,WAAA,KAAA4B,SAAA,CAA+B"},"metadata":{},"sourceType":"module","externalDependencies":[]}