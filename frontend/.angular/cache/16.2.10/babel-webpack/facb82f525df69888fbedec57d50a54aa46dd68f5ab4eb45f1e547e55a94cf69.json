{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/LabSeqService\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction LabSeqComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1, \"Fetching...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LabSeqComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"p\", 21);\n    i0.ɵɵtext(2, \"LabSeq Value:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 22);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.labSeqValue);\n  }\n}\nfunction LabSeqComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"p\", 24);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.error);\n  }\n}\nfunction LabSeqComponent_tr_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 25)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const result_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(result_r4.input);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(result_r4.output);\n  }\n}\nexport class LabSeqComponent {\n  constructor(labSeqService) {\n    this.labSeqService = labSeqService;\n    this.sequenceNumber = ''; // Start with an empty string\n    this.labSeqValue = '-'; // Start with an empty string\n    this.loading = false;\n    this.error = null;\n    this.historyResults = [];\n    this.labSeqSubscription = null;\n  }\n  isValidInput() {\n    // Use regex to match positive integers\n    const positiveIntegerRegex = /^[0-9]\\d*$/;\n    // Check if the input is a positive integer and less than or equal to 1000\n    const isValid = positiveIntegerRegex.test(this.sequenceNumber) && +this.sequenceNumber <= 1000;\n    if (!isValid) {\n      console.error('Invalid input. Please enter a positive integer less than or equal to 1000.');\n    }\n    return isValid;\n  }\n  getLabSeqValue() {\n    this.loading = true;\n    this.error = null;\n    if (!this.isValidInput()) {\n      return;\n    }\n    if (this.labSeqSubscription) {\n      this.labSeqSubscription.unsubscribe();\n    }\n    // Convert the input to a number if it's not an empty string\n    const inputNumber = this.sequenceNumber !== '' ? +this.sequenceNumber : 0;\n    this.labSeqSubscription = this.labSeqService.getLabSeqValue(inputNumber).subscribe({\n      next: value => {\n        this.labSeqValue = value.toString();\n        this.historyResults.push({\n          input: this.sequenceNumber?.toString() ?? 'N/A',\n          output: this.labSeqValue.toString()\n        });\n        this.sequenceNumber = ''; // Set the input to an empty string\n        this.loading = false;\n      },\n      error: error => {\n        console.error('Error fetching LabSeq value:', error);\n        this.error = 'Error fetching LabSeq value. Please try again.';\n        this.loading = false;\n      }\n    });\n  }\n  openSwaggerUI() {\n    const swaggerUrl = 'http://localhost:8080/q/swagger-ui';\n    window.open(swaggerUrl, '_blank');\n  }\n  static #_ = this.ɵfac = function LabSeqComponent_Factory(t) {\n    return new (t || LabSeqComponent)(i0.ɵɵdirectiveInject(i1.LabSeqService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LabSeqComponent,\n    selectors: [[\"app-labseq\"]],\n    decls: 50,\n    vars: 8,\n    consts: [[1, \"main-container\"], [1, \"intro-section\"], [1, \"title\"], [1, \"form-container\", 2, \"margin-top\", \"2rem\"], [\"for\", \"sequenceNumber\"], [1, \"input-button-container\"], [\"type\", \"number\", \"id\", \"sequenceNumber\", \"placeholder\", \"{n}\", 3, \"ngModel\", \"ngModelChange\"], [3, \"disabled\", \"click\"], [\"class\", \"loading-spinner\", 4, \"ngIf\"], [\"class\", \"result-section\", 4, \"ngIf\"], [\"class\", \"error-section\", 4, \"ngIf\"], [1, \"swagger-section\"], [1, \"swagger-button\", 3, \"click\"], [1, \"history-card\", 2, \"margin-top\", \"2rem\"], [1, \"history-label\"], [1, \"history-table\"], [\"class\", \"history-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"github-link\"], [\"href\", \"https://github.com/dafilmorais\", \"target\", \"_blank\", \"rel\", \"noopener noreferrer\"], [1, \"loading-spinner\"], [1, \"result-section\"], [1, \"result-label\"], [1, \"result-text\"], [1, \"error-section\"], [1, \"error-text\"], [1, \"history-item\"]],\n    template: function LabSeqComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h1\", 2);\n        i0.ɵɵtext(3, \"LabSeq Calculator!\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\");\n        i0.ɵɵtext(5, \" This page allows you to explore the LabSeq sequence, a mathematical sequence defined by specific rules. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\")(7, \"p\");\n        i0.ɵɵtext(8, \"The LabSeq sequence is defined as follows:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"ul\")(10, \"li\");\n        i0.ɵɵtext(11, \"n=0 => l(0) = 0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"li\");\n        i0.ɵɵtext(13, \"n=1 => l(1) = 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"li\");\n        i0.ɵɵtext(15, \"n=2 => l(2) = 0\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"li\");\n        i0.ɵɵtext(17, \"n=3 => l(3) = 1\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"li\");\n        i0.ɵɵtext(19, \"n>3 => l(n) = l(n-4) + l(n-3)\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(20, \"p\");\n        i0.ɵɵtext(21, \" The maximum allowed value for LabSeq calculations is set to 1000 to ensure optimal performance and prevent memory limit issues. \");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 3)(23, \"label\", 4);\n        i0.ɵɵtext(24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 5)(26, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function LabSeqComponent_Template_input_ngModelChange_26_listener($event) {\n          return ctx.sequenceNumber = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function LabSeqComponent_Template_button_click_27_listener() {\n          return ctx.getLabSeqValue();\n        });\n        i0.ɵɵtext(28, \"GET\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(29, LabSeqComponent_div_29_Template, 2, 0, \"div\", 8);\n        i0.ɵɵtemplate(30, LabSeqComponent_div_30_Template, 5, 1, \"div\", 9);\n        i0.ɵɵtemplate(31, LabSeqComponent_div_31_Template, 3, 1, \"div\", 10);\n        i0.ɵɵelementStart(32, \"div\", 11)(33, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function LabSeqComponent_Template_button_click_33_listener() {\n          return ctx.openSwaggerUI();\n        });\n        i0.ɵɵtext(34, \" Go to Swagger UI \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(35, \"div\", 13)(36, \"p\", 14);\n        i0.ɵɵtext(37, \"History Results:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"table\", 15)(39, \"thead\")(40, \"tr\")(41, \"th\");\n        i0.ɵɵtext(42, \"Input\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"th\");\n        i0.ɵɵtext(44, \"Output LabSeq Value\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(45, \"tbody\");\n        i0.ɵɵtemplate(46, LabSeqComponent_tr_46_Template, 5, 2, \"tr\", 16);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(47, \"div\", 17)(48, \"a\", 18);\n        i0.ɵɵtext(49);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(24);\n        i0.ɵɵtextInterpolate1(\"Enter value for \", \"{n}\", \":\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngModel\", ctx.sequenceNumber);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !ctx.isValidInput());\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.loading);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loading && ctx.error === null);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.error !== null);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngForOf\", ctx.historyResults);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" Check out more of my projects \", \"@\", \"dafilmorais (GitHub) \");\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgIf, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgModel],\n    styles: [\".main-container[_ngcontent-%COMP%] {\\n  justify-content: center;\\n  flex-direction: column;\\n  align-items: center;\\n  width: 50vw;\\n}\\n\\n.intro-section[_ngcontent-%COMP%] {\\n  font-family: Arial, Helvetica, sans-serif;\\n  margin: auto;\\n  max-width: 40vw;\\n}\\n.title[_ngcontent-%COMP%] {\\n  text-align: center;\\n}\\n\\n.form-container[_ngcontent-%COMP%], .history-card[_ngcontent-%COMP%] {\\n  width: 20vw;\\n  margin: 0 auto;\\n  padding: 20px;\\n  border: 1px solid #ccc;\\n  border-radius: 5px;\\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\nlabel[_ngcontent-%COMP%] {\\n  display: block;\\n  margin-bottom: 10px;\\n  font-weight: bold;\\n}\\n\\ninput[_ngcontent-%COMP%] {\\n  width: 100%;\\n  padding: 8px;\\n  margin-bottom: 15px;\\n  box-sizing: border-box;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  margin-bottom: 10px;\\n  box-sizing: border-box;\\n  cursor: pointer;\\n}\\n\\nbutton.swagger-button[_ngcontent-%COMP%] {\\n  background-color: #4caf50;\\n  color: #fff;\\n}\\n\\nbutton.swagger-button[_ngcontent-%COMP%]:hover {\\n  background-color: #45a049;\\n}\\n\\n.result-section[_ngcontent-%COMP%] {\\n    margin-top: 15px;\\n    text-align: center;\\n  }\\n  \\n\\n\\n.result-label[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n}\\n.result-text[_ngcontent-%COMP%] {\\n    font-size: 3em;\\n    overflow: visible;  \\n\\n    word-wrap: break-word;  \\n\\n  }\\n\\n.swagger-section[_ngcontent-%COMP%] {\\n  text-align: center;\\n  margin-top: 20px;\\n}\\n\\n.loading-spinner[_ngcontent-%COMP%] {\\n  text-align: center;\\n  padding: 10px;\\n  font-weight: bold;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  height: 50px;\\n}\\n\\n.input-button-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 10px;\\n}\\n\\n.input-button-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .input-button-container[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  flex: 1;\\n  box-sizing: border-box;\\n  padding: 10px;\\n  height: 40px;\\n}\\n\\n.error-section[_ngcontent-%COMP%] {\\n  margin-top: 15px;\\n  text-align: center;\\n  color: red;\\n}\\n\\n.error-text[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n}\\n\\n.history-label[_ngcontent-%COMP%] {\\n  margin-top: 0;\\n  font-weight: bold;\\n}\\n\\n.history-list[_ngcontent-%COMP%] {\\n  list-style-type: none;\\n  padding: 0;\\n}\\n\\n.history-item[_ngcontent-%COMP%] {\\n  margin-bottom: 5px;\\n}\\n.history-table[_ngcontent-%COMP%] {\\n  width: 100%;\\n  border-collapse: collapse;\\n  margin-top: 10px;\\n}\\n\\n.history-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%], .history-table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%] {\\n  border: 1px solid #ddd;\\n  padding: 8px;\\n  text-align: left;\\n}\\n\\n.history-table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n  background-color: #f2f2f2;\\n}\\n\\n.github-link[_ngcontent-%COMP%] {\\n  margin-top: 2rem;\\n  margin-bottom: 2rem;\\n  text-align: center;\\n  font-family: Arial, Helvetica, sans-serif;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9MYWJTZXFDb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsdUJBQXVCO0VBQ3ZCLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsV0FBVztBQUNiOztBQUVBO0VBQ0UseUNBQXlDO0VBQ3pDLFlBQVk7RUFDWixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7O0VBRUUsV0FBVztFQUNYLGNBQWM7RUFDZCxhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLGtCQUFrQjtFQUNsQix1Q0FBdUM7RUFDdkMseUNBQXlDO0FBQzNDOztBQUVBO0VBQ0UsY0FBYztFQUNkLG1CQUFtQjtFQUNuQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHNCQUFzQjtFQUN0QixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixrQkFBa0I7RUFDcEI7Ozs7QUFJRjtFQUNFLGlCQUFpQjtBQUNuQjtBQUNBO0lBQ0ksY0FBYztJQUNkLGlCQUFpQixHQUFHLDRCQUE0QjtJQUNoRCxxQkFBcUIsR0FBRyx5Q0FBeUM7RUFDbkU7O0FBRUY7RUFDRSxrQkFBa0I7RUFDbEIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGFBQWE7RUFDYixpQkFBaUI7RUFDakIsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsYUFBYTtFQUNiLFNBQVM7QUFDWDs7QUFFQTs7RUFFRSxPQUFPO0VBQ1Asc0JBQXNCO0VBQ3RCLGFBQWE7RUFDYixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsa0JBQWtCO0VBQ2xCLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsVUFBVTtBQUNaOztBQUVBO0VBQ0Usa0JBQWtCO0FBQ3BCO0FBQ0E7RUFDRSxXQUFXO0VBQ1gseUJBQXlCO0VBQ3pCLGdCQUFnQjtBQUNsQjs7QUFFQTs7RUFFRSxzQkFBc0I7RUFDdEIsWUFBWTtFQUNaLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsa0JBQWtCO0VBQ2xCLHlDQUF5QztBQUMzQyIsInNvdXJjZXNDb250ZW50IjpbIi5tYWluLWNvbnRhaW5lciB7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIHdpZHRoOiA1MHZ3O1xyXG59XHJcblxyXG4uaW50cm8tc2VjdGlvbiB7XHJcbiAgZm9udC1mYW1pbHk6IEFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWY7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG4gIG1heC13aWR0aDogNDB2dztcclxufVxyXG4udGl0bGUge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmZvcm0tY29udGFpbmVyLFxyXG4uaGlzdG9yeS1jYXJkIHtcclxuICB3aWR0aDogMjB2dztcclxuICBtYXJnaW46IDAgYXV0bztcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxufVxyXG5cclxubGFiZWwge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbmlucHV0IHtcclxuICB3aWR0aDogMTAwJTtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5idXR0b24ge1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxufVxyXG5cclxuYnV0dG9uLnN3YWdnZXItYnV0dG9uIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNGNhZjUwO1xyXG4gIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG5idXR0b24uc3dhZ2dlci1idXR0b246aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0NWEwNDk7XHJcbn1cclxuXHJcbi5yZXN1bHQtc2VjdGlvbiB7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIH1cclxuICBcclxuXHJcblxyXG4ucmVzdWx0LWxhYmVsIHtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG4ucmVzdWx0LXRleHQge1xyXG4gICAgZm9udC1zaXplOiAzZW07XHJcbiAgICBvdmVyZmxvdzogdmlzaWJsZTsgIC8qIFJlbW92ZSBvdmVyZmxvdzogaGlkZGVuICovXHJcbiAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7ICAvKiBBZGQgdGhpcyBsaW5lIHRvIGFsbG93IHdvcmQgd3JhcHBpbmcgKi9cclxuICB9XHJcblxyXG4uc3dhZ2dlci1zZWN0aW9uIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgbWFyZ2luLXRvcDogMjBweDtcclxufVxyXG5cclxuLmxvYWRpbmctc3Bpbm5lciB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGhlaWdodDogNTBweDtcclxufVxyXG5cclxuLmlucHV0LWJ1dHRvbi1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZ2FwOiAxMHB4O1xyXG59XHJcblxyXG4uaW5wdXQtYnV0dG9uLWNvbnRhaW5lciBpbnB1dCxcclxuLmlucHV0LWJ1dHRvbi1jb250YWluZXIgYnV0dG9uIHtcclxuICBmbGV4OiAxO1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgcGFkZGluZzogMTBweDtcclxuICBoZWlnaHQ6IDQwcHg7XHJcbn1cclxuXHJcbi5lcnJvci1zZWN0aW9uIHtcclxuICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG4uZXJyb3ItdGV4dCB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuXHJcbi5oaXN0b3J5LWxhYmVsIHtcclxuICBtYXJnaW4tdG9wOiAwO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG4uaGlzdG9yeS1saXN0IHtcclxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgcGFkZGluZzogMDtcclxufVxyXG5cclxuLmhpc3RvcnktaXRlbSB7XHJcbiAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG59XHJcbi5oaXN0b3J5LXRhYmxlIHtcclxuICB3aWR0aDogMTAwJTtcclxuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG4gIG1hcmdpbi10b3A6IDEwcHg7XHJcbn1cclxuXHJcbi5oaXN0b3J5LXRhYmxlIHRoLFxyXG4uaGlzdG9yeS10YWJsZSB0ZCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcclxuICBwYWRkaW5nOiA4cHg7XHJcbiAgdGV4dC1hbGlnbjogbGVmdDtcclxufVxyXG5cclxuLmhpc3RvcnktdGFibGUgdGgge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmMmYyZjI7XHJcbn1cclxuXHJcbi5naXRodWItbGluayB7XHJcbiAgbWFyZ2luLXRvcDogMnJlbTtcclxuICBtYXJnaW4tYm90dG9tOiAycmVtO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcclxufVxyXG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","labSeqValue","ctx_r2","error","result_r4","input","output","LabSeqComponent","constructor","labSeqService","sequenceNumber","loading","historyResults","labSeqSubscription","isValidInput","positiveIntegerRegex","isValid","test","console","getLabSeqValue","unsubscribe","inputNumber","subscribe","next","value","toString","push","openSwaggerUI","swaggerUrl","window","open","_","ɵɵdirectiveInject","i1","LabSeqService","_2","selectors","decls","vars","consts","template","LabSeqComponent_Template","rf","ctx","ɵɵlistener","LabSeqComponent_Template_input_ngModelChange_26_listener","$event","LabSeqComponent_Template_button_click_27_listener","ɵɵtemplate","LabSeqComponent_div_29_Template","LabSeqComponent_div_30_Template","LabSeqComponent_div_31_Template","LabSeqComponent_Template_button_click_33_listener","LabSeqComponent_tr_46_Template","ɵɵtextInterpolate1","ɵɵproperty"],"sources":["C:\\Users\\danie\\Desktop\\quarkus-rest-service\\frontend\\src\\app\\components\\LabSeqComponent.ts","C:\\Users\\danie\\Desktop\\quarkus-rest-service\\frontend\\src\\app\\components\\LabSeqComponent.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { LabSeqService } from '../services/LabSeqService';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-labseq',\r\n  templateUrl: './LabSeqComponent.html',\r\n  styleUrls: ['LabSeqComponent.css'],\r\n})\r\nexport class LabSeqComponent {\r\n  sequenceNumber: string = ''; // Start with an empty string\r\n  labSeqValue: string = '-'; // Start with an empty string\r\n  loading: boolean = false;\r\n  error: string | null = null;\r\n  historyResults: { input: string; output: string }[] = [];\r\n  private labSeqSubscription: Subscription | null = null;\r\n\r\n  constructor(private labSeqService: LabSeqService) {}\r\n\r\n  isValidInput(): boolean {\r\n    // Use regex to match positive integers\r\n    const positiveIntegerRegex = /^[0-9]\\d*$/;\r\n  \r\n    // Check if the input is a positive integer and less than or equal to 1000\r\n    const isValid = positiveIntegerRegex.test(this.sequenceNumber) && +this.sequenceNumber <= 1000;\r\n  \r\n    if (!isValid) {\r\n      console.error('Invalid input. Please enter a positive integer less than or equal to 1000.');\r\n    }\r\n  \r\n    return isValid;\r\n  }\r\n\r\n  getLabSeqValue(): void {\r\n    this.loading = true;\r\n    this.error = null;\r\n\r\n    if (!this.isValidInput()) {\r\n      return;\r\n    }\r\n\r\n    if (this.labSeqSubscription) {\r\n      this.labSeqSubscription.unsubscribe();\r\n    }\r\n\r\n    // Convert the input to a number if it's not an empty string\r\n    const inputNumber = this.sequenceNumber !== '' ? +this.sequenceNumber : 0;\r\n\r\n    this.labSeqSubscription = this.labSeqService\r\n      .getLabSeqValue(inputNumber)\r\n      .subscribe({\r\n        next: (value) => {\r\n          this.labSeqValue = value.toString();\r\n          this.historyResults.push({\r\n            input: this.sequenceNumber?.toString() ?? 'N/A',\r\n            output: this.labSeqValue.toString(),\r\n          });\r\n          this.sequenceNumber = ''; // Set the input to an empty string\r\n          this.loading = false;\r\n        },\r\n        error: (error) => {\r\n          console.error('Error fetching LabSeq value:', error);\r\n          this.error = 'Error fetching LabSeq value. Please try again.';\r\n          this.loading = false;\r\n        },\r\n      });\r\n  }\r\n\r\n  openSwaggerUI(): void {\r\n    const swaggerUrl = 'http://localhost:8080/q/swagger-ui';\r\n    window.open(swaggerUrl, '_blank');\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n  <div class=\"intro-section\">\r\n    <h1 class=\"title\">LabSeq Calculator!</h1>\r\n    <p>\r\n      This page allows you to explore the LabSeq sequence, a mathematical\r\n      sequence defined by specific rules.\r\n    </p>\r\n    <div>\r\n      <p>The LabSeq sequence is defined as follows:</p>\r\n      <ul>\r\n        <li>n=0 => l(0) = 0</li>\r\n        <li>n=1 => l(1) = 1</li>\r\n        <li>n=2 => l(2) = 0</li>\r\n        <li>n=3 => l(3) = 1</li>\r\n        <li>n>3 => l(n) = l(n-4) + l(n-3)</li>\r\n      </ul>\r\n    </div>\r\n    <p>\r\n      The maximum allowed value for LabSeq calculations is set to 1000 to ensure optimal performance and prevent memory limit issues.\r\n    </p>\r\n  </div>\r\n  <div class=\"form-container\" style=\"margin-top: 2rem\">\r\n    <label for=\"sequenceNumber\">Enter value for {{'{n}'}}:</label>\r\n    <div class=\"input-button-container\">\r\n      <input\r\n        type=\"number\"\r\n        id=\"sequenceNumber\"\r\n        [(ngModel)]=\"sequenceNumber\"\r\n        placeholder=\"{n}\"\r\n      />\r\n      <button (click)=\"getLabSeqValue()\"  [disabled]=\"!isValidInput()\">GET</button>\r\n    </div>\r\n\r\n    <div *ngIf=\"loading\" class=\"loading-spinner\">Fetching...</div>\r\n\r\n    <div class=\"result-section\" *ngIf=\"!loading && error === null\">\r\n      <p class=\"result-label\">LabSeq Value:</p>\r\n      <p class=\"result-text\">{{ labSeqValue }}</p>\r\n    </div>\r\n\r\n    <div *ngIf=\"error !== null\" class=\"error-section\">\r\n      <p class=\"error-text\">{{ error }}</p>\r\n    </div>\r\n\r\n    <div class=\"swagger-section\">\r\n      <button (click)=\"openSwaggerUI()\" class=\"swagger-button\">\r\n        Go to Swagger UI\r\n      </button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"history-card\" style=\"margin-top: 2rem\">\r\n    <p class=\"history-label\">History Results:</p>\r\n    <table class=\"history-table\">\r\n      <thead>\r\n        <tr>\r\n          <th>Input</th>\r\n          <th>Output LabSeq Value</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr *ngFor=\"let result of historyResults\" class=\"history-item\">\r\n          <td>{{ result.input }}</td>\r\n          <td>{{ result.output }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n\r\n  <div class=\"github-link\">\r\n    <a\r\n      href=\"https://github.com/dafilmorais\"\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      Check out more of my projects {{'@'}}dafilmorais (GitHub)\r\n    </a>\r\n  </div>\r\n</div>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}